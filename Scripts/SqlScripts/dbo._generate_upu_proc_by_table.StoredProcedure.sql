IF OBJECT_ID('[dbo].[_generate_upu_proc_by_table]', 'P') IS NOT NULL
	DROP PROCEDURE [dbo].[_generate_upu_proc_by_table]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
 _generate_upu_proc_by_table 'supplier_network_offer_category_type', 'd_', 'Supplier_Network_Offer_Category_Type'
 
select * from vs_table where name like '%line_booking_autoapprove_rule_company_chain_advertiser%'
*/

CREATE   procedure [dbo].[_generate_upu_proc_by_table]
	@name nvarchar(100),
	@prefix nvarchar(10),
	@camel_case_name nvarchar(100)
as
	set nocount on

  --  MERGE v_product AS target
		--USING (SELECT * FROM d_product) AS source ON (target.id = source.id)
		--WHEN MATCHED THEN 
		--	UPDATE 
		--		SET 
		--			name = source.name
		--WHEN NOT MATCHED THEN	
		--	INSERT (
		--			id, 
		--			name
		--		)
		--		VALUES (
		--			source.id, 
		--			source.name
		--		);
				
	declare @t table ( n int, name nvarchar(100), fulltype nvarchar(200), type nvarchar(100), isnullable int )
	declare 
		@table_name			nvarchar(255)
	,	@proc_name			nvarchar(255)
	,	@proc_log_name		nvarchar(255)
	,	@default_view_name	nvarchar(255)
	,	@proc_set_name		nvarchar(255)
	,	@view_name 			nvarchar(255)
	,	@table_id			uniqueidentifier
	,	@fields_for_join	nvarchar(max) = ''
	,	@fields_for_insert	nvarchar(max) = ''

	set @table_name = @prefix + @name
	set @proc_name = 'upu_' + @camel_case_name + '_Update'
	set @proc_log_name = 'upu_' + @camel_case_name + '_Log'
	set @default_view_name = 'v_' + @camel_case_name + '_Default'
	set @proc_set_name = 'upu_' + @camel_case_name + '_Set'
	set @view_name = 'v_' + @camel_case_name	

	SELECT @table_id = id FROM s_Table WHERE [name] = @table_name

	IF @table_id IS NULL BEGIN
		PRINT '<row id="' + cast(newid() as nvarchar(100)) + '" name="' + @table_name + '" caption="!!!Описание таблицы!!!" is_mergeable="0" for_surcharge="0" archive="0" is_main_table_of_frame="1" proc_name="up_' + @name + '" view_name="v' + @table_name + '" />>'
		EXEC upu_raise_error  @error_code = 300000, @message_marker = 'Таблица не зарегистрирована в s_Table'
		RETURN
	END

	insert @t (n, name, fulltype, type, isnullable)
	select 
		row_number() over(order by (select null)),
		col.name,
		tp.name + case when tp.name in ('char', 'nvarchar', 'nchar', 'nvarchar') then '(' + ltrim(str(col.length)) + ')' else '' end, 
		tp.name,
		col.isnullable
	from 
		[syscolumns] col
		join [sysobjects] obj on col.id = obj.id
		join [systypes] tp on tp.xusertype = col.xusertype
	where obj.name = @table_name

	declare @maxn int
	select @maxn = max( n ) from @t

	select 
		@fields_for_insert = @fields_for_insert + '<prefix>' + name + ','
	,	@fields_for_join = @fields_for_join + 'source.' + name + ' = target.' + name + ' and '
	from @t 
	where [name] not in ('id', 'nmb', 's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id', 'archive')

	if right(@fields_for_insert, 1) = ',' 
		set @fields_for_insert = left(@fields_for_insert, len(@fields_for_insert) - 1) 
	if right(@fields_for_join, 5) = ' and ' 
		set @fields_for_join = left(@fields_for_join, len(@fields_for_join) - 4) 


	declare @lines table( line varchar(8000) )

	-- ********* PROCEDURE HEADER **********

	insert @lines ( line )
					select 'IF OBJECT_ID(''' + @proc_name +  ''', ''P'') IS NOT NULL'
		union all 	select '	DROP PROCEDURE dbo.' + @proc_name
		union all 	select 'GO'
		union all 	select 'SET QUOTED_IDENTIFIER ON'
		union all 	select 'GO'
		union all 	select 'SET ANSI_NULLS ON'
		union all 	select 'GO'
		union all 	select '-- ============================================='
		union all	select '-- Author:  '  +   SUSER_SNAME(SUSER_SID())
		union all	select '-- Create date: ' +  convert(nvarchar(20), getdate(), 20)
		union all	select '-- Description: Adds and/or updates data in ' + @table_name + ' table'
		union all	select '--		'
		union all 	select '-- ============================================='
		union all 	select 'CREATE PROCEDURE dbo.' + @proc_name
		union all 	select '	@user_id			uniqueidentifier,'
		union all 	select '	@skip_check			bit					= 0,'
		union all 	select '	@skip_recalc		bit					= 0,'
		union all 	select '	@force_update		bit					= 0,'
		union all 	select '	@skip_security		bit					= 0,'
		union all 	select '	@error_message		nvarchar(max)		= NULL out,'
		union all 	select '	@notify_sync		bit					= 1,'
		union all 	select '	@debug				bit					= 0'
		union all 	select 'AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '		BEGIN'
		union all 	select '			PRINT CAST(@@NESTLEVEL AS nvarchar(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(nvarchar(24), getdate(), 121)'
		union all 	select '			PRINT ''---'''
		union all 	select '		END'
		union all 	select '	ELSE SET NOCOUNT ON' 
		union all 	select ''
		union all 	select '	DECLARE'
		union all 	select '		@rc					int,'
		union all 	select '		@skip_update		bit,'
		union all 	select '		@xml				nvarchar(max)'
		union all 	select '--------------------------------'
		union all 	select '-- Удаляемые записи'
		union all 	select '--------------------------------'
		union all 	select '	SELECT TOP 0 v.* INTO #upu_' + @camel_case_name + '_deleted  FROM (SELECT 1 a) t LEFT JOIN v_' + @camel_case_name + ' v ON 1=0'
		union all 	select '--	CREATE INDEX upu_' + @camel_case_name + '_deleted__id ON #upu_' + @camel_case_name + '_deleted(id)'
		union all 	select '	INSERT #upu_' + @camel_case_name + '_deleted  SELECT d.* FROM #upu_' + @camel_case_name + ' i JOIN v_' + @camel_case_name + ' d ON i.nmb = d.nmb; IF @@rowcount = 0 SELECT @skip_update = 1'
		union all 	select '--------------------------------'
		union all 	select '-- Обсчет вычисляемых колонок --'
		union all 	select '--------------------------------'
		union all 	select '--	IF isnull(@skip_recalc, 0) = 0 BEGIN'
		union all 	select ''
		union all 	select '--	END'
		union all 	select '--------------------------------'
		union all 	select '-- изменяемые записи'
		union all 	select '--------------------------------'
		union all 	select '	SELECT TOP 0 v.* INTO #upu_' + @camel_case_name + '_changed  FROM (SELECT 1 a) t LEFT JOIN v_' + @camel_case_name + ' v ON 1=0'
		union all 	select '--	CREATE INDEX upu_' + @camel_case_name + '_changed__id ON #upu_' + @camel_case_name + '_changed(id)'
		union all 	select '	IF @force_update = 1'
		union all 	select '		INSERT #upu_' + @camel_case_name + '_changed SELECT * FROM #upu_' + @camel_case_name + ' ; IF @@rowcount = 0 RETURN 0 -- выходим если нечего изменять'
		union all 	select '	ELSE'
		union all 	select '		INSERT #upu_' + @camel_case_name + '_changed SELECT * FROM (SELECT * FROM #upu_' + @camel_case_name + ' EXCEPT SELECT * FROM #upu_' + @camel_case_name + '_deleted) t ; IF @@rowcount = 0 RETURN 0 -- выходим если нечего изменять'
		union all 	select '--------------------------------'
		union all 	select '-- база только для чтения'
		union all 	select '--------------------------------'
		union all 	select '	IF dbo.uf_Database_is_readonly() = 1 BEGIN'
		union all 	select '		EXEC upu_raise_error  @error_code = 300000, @message_marker = ''Система находится в режиме чтения.'''
		union all 	select ''
		union all 	select '		IF @debug = 1'
		union all 	select '			PRINT ''+++'''
		union all 	select ''
		union all 	select '		RETURN -1'
		union all 	select '	END'		
		union all 	select '--------------------------------'
		union all 	select '-- Пустые id'
		union all 	select '--------------------------------'
		union all 	select '	UPDATE #upu_' + @camel_case_name + '_changed SET [id] = newid() WHERE [id] IS NULL'
		union all 	select '--------------------------------'
		union all 	select '-- Проверка прав'
		union all 	select '--------------------------------'
		union all 	select '	IF isnull(@skip_security, 0) = 0 BEGIN'
		union all 	select '		EXEC @rc = upu_' + @camel_case_name + '_Secure'
		union all 	select '			@user_id		= @user_id,'
		union all 	select '			@debug			= @debug'
		union all 	select ''
		union all 	select '		IF @debug = 1'
		union all 	select '			PRINT ''+++'''
		union all 	select ''
		union all 	select '		IF @@ERROR <> 0 OR @rc <> 0 RETURN -1'
		union all 	select '	END'
		union all 	select '--------------------------------'
		union all 	select '-- Проверка логики'
		union all 	select '--------------------------------'
		union all 	select '--	IF isnull(@skip_check, 0) = 0 BEGIN'
		union all 	select '--		EXEC @rc = upu_' + @camel_case_name + '_Check'
		union all 	select '--			@error_message	= @error_message out,'		
		union all 	select '--			@debug				= @debug'
		union all 	select ''
		union all 	select '--		IF @debug = 1'
		union all 	select '--			PRINT ''+++'''
		union all 	select ''
		union all 	select '--		IF @@ERROR <> 0 OR @rc <> 0 RETURN -1'
		union all 	select '--	END'
		union all 	select ''
		union all 	select '----------------------------------------------'
		union all 	select '-- транзакция'
		union all 	select '----------------------------------------------'
		union all 	select '	SET XACT_ABORT ON'
		union all 	select '	BEGIN TRANSACTION'
		union all 	select '----------------------------------'
		union all 	select '-- Внесение изменений в таблицы --'
		union all 	select '----------------------------------'
		union all 	select '--		DECLARE @t table (id uniqueidentifier, nmb bigint)'
		union all 	select ''
		union all 	select '		IF isnull(@skip_update, 0) = 0'
		union all 	select '			MERGE ' + @table_name + ' AS target'
		union all 	select '				USING #upu_' + @camel_case_name + '_changed AS source ON target.nmb = source.nmb'
		union all 	select '				WHEN MATCHED THEN '
		union all 	select '					UPDATE SET '
		union all 	select '						[s_changed_date]						= getdate(),'
		union all 	select '						[s_changed_user_id]						= @user_id,'
	insert @lines ( line )
					select '						[' + name + ']' + replicate(char(9), 9-(len(name) + 2) / 4) + '	= source.[' + name + ']' + case when n <> @maxn  then ',' else '' end from @t 
								where name not in ('id', 'nmb', 's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id')
	order by n
	insert @lines ( line )
					select '				WHEN NOT MATCHED THEN	'
		union all 	select '					INSERT ('
		union all 	select '						[id],'
		union all 	select '						[s_created_user_id],'
		union all 	select '						[s_created_date],'
		union all 	select '						[s_changed_date],'
		union all 	select '						[s_changed_user_id],'
	insert @lines ( line )
					select '						[' + name + ']' + case when n <> @maxn then ',' else '' end from @t 
								WHERE [name] NOT IN ('id', 'nmb',  's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id')
	order by n
	insert @lines ( line )
					select '					)'
		union all 	select '					VALUES ('
		union all 	select '						source.[id],'
		union all 	select '						@user_id,'
		union all 	select '						getdate(),'
		union all 	select '						getdate(),'
		union all 	select '						@user_id,'
	insert @lines ( line )
					select '						source.[' + name + ']' +  case when n <> @maxn then ',' else '' end from @t 
								WHERE [name] NOT IN ('id', 'nmb',  's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id')
	order by n
	insert @lines ( line )
					select '					);'
		union all 	select '--					OUTPUT inserted.id, inserted.$identity INTO @t '
	--	union all 	select '				SET'
	--insert @lines ( line )
	--				select '					[' + name + ']' + replicate(char(9), 9-(len(name) + 2) / 4) + '	= inp.[' + name + ']' + case when n <> @maxn  then ',' else '' end from @t where name not in ('id',  'nmb', 's_created_user_id')
	--	order by n
	--insert @lines ( line )
	--				select '				FROM'
	--	union all 	select '					#upu_' + @camel_case_name + '_changed	inp'
	--	union all 	select '					JOIN ' + @table_name + ' t	ON t.id = inp.id'
		union all 	select '		ELSE'
		union all 	select '			INSERT '
		union all 	select '				' + @table_name + ' ('
		union all 	select '					[id],'
		union all 	select '					[s_created_user_id],'
		union all 	select '					[s_created_date],'
		union all 	select '					[s_changed_date],'
		union all 	select '					[s_changed_user_id],'
	insert @lines ( line )
					select '					[' + name + ']' + case when n <> @maxn then ',' else '' end from @t 
								WHERE [name] NOT IN ('id', 'nmb', 's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id')
		order by n

	insert @lines ( line )
					select '				)'
		union all 	select '--				OUTPUT inserted.id, inserted.$identity INTO @t '
		union all 	select '				SELECT'
		union all 	select '					i.[id],'
		union all 	select '					@user_id,'
		union all 	select '					getdate(),'
		union all 	select '					getdate(),'
		union all 	select '					@user_id,'
	insert @lines ( line )
					select '					i.[' + name + ']' + case when n <> @maxn then ',' else '' end from @t 
								WHERE [name] NOT IN ('id', 'nmb', 's_created_user_id', 's_created_date', 's_changed_date', 's_changed_user_id')
		order by n
	insert @lines ( line )
					select '				FROM'
		union all 	select '					#upu_' + @camel_case_name + '_changed i'
		union all 	select '					LEFT JOIN #upu_' + @camel_case_name + '_deleted d ON d.nmb = i.nmb'
		union all 	select '				WHERE'
		union all 	select '					d.nmb IS NULL'
		union all 	select '---------------------------------------------------'
		union all 	select '-- проставляем nmb во временной таблице'
		union all 	select '---------------------------------------------------'
		union all 	select '--		IF EXISTS(SELECT 1 FROM @t)'
		union all 	select '--			UPDATE	inp'
		union all 	select '--			SET		inp.nmb = t.nmb'
		union all 	select '--			FROM	#upu_' + @camel_case_name + '_changed inp'
		union all 	select '--					JOIN @t t on t.id = inp.id'
		union all 	select '----------------------------------------------'
		union all 	select '---- Удаление подчинённого дерева объектов'
		union all 	select '----------------------------------------------'
		union all 	select '--		IF EXISTS('
		union all 	select '--			SELECT TOP 1 1 FROM #upu_' + @camel_case_name + '_changed WHERE [archive] = 1'
		union all 	select '--		)  '
		union all 	select '--		BEGIN'
		union all 	select '--			-----------------------------------'
		union all 	select '--			-- deleting  BEGIN'
		union all 	select '--			-----------------------------------'
		union all 	select '--			SELECT d.* '
		union all 	select '--				INTO '
		union all 	select '--					#upu_<Table_Name, sysname, > '
		union all 	select '--				FROM '
		union all 	select '--					v_<Table_Name, sysname, >			d'		
		union all 	select '--					JOIN #upu_' +  @camel_case_name + '_changed	t ON t.id = d.[' + lower(@camel_case_name) + '_id]'
		union all 	select '--				WHERE '
		union all 	select '--					t.[archive] = 1'
		union all 	select '--					AND'
		union all 	select '--					d.[archive] = 0'
		union all 	select '--'
		union all 	select '--			UPDATE #upu_<Table_Name, sysname, >'
		union all 	select '--				SET '
		union all 	select '--					[archive] = 1'
		union all 	select '--			'
		union all 	select '--			IF @@rowcount > 0'
		union all 	select '--				EXEC @rc = upu_<Table_Name, sysname, >_Update'
		union all 	select '--					@user_id			= @user_id,'
		union all 	select '--					@skip_check			= @skip_check,'
		union all 	select '--					@skip_recalc		= @skip_recalc,'
		union all 	select '--					@skip_security		= @skip_security,'
		union all 	select '--					@error_message	= @error_message	out,'
		union all 	select '--					@notify_sync		= @notify_sync,'
		union all 	select '--					@debug				= @debug'
		union all 	select '--'
		union all 	select '--			IF @@ERROR <> 0 OR @rc <> 0 '
		union all 	select '--				BEGIN'
		union all 	select '--					IF @@trancount = 1 ROLLBACK ELSE IF @@trancount > 1 COMMIT'
		union all 	select ''
		union all 	select '--					IF @debug = 1'
		union all 	select '--						PRINT ''+++'''
		union all 	select ''
		union all 	select '--					RETURN -1'
		union all 	select '--				END'
		union all 	select '--			-----------------------------------'
		union all 	select '--			-- deleting plans END'
		union all 	select '--			-----------------------------------'
		union all 	select '--		END'
		union all 	select ''
		union all 	select '		IF @notify_sync = 0 BEGIN'
		union all 	select '-------------------------------------------'
		union all 	select '---- асинхронные события'
		union all 	select '-------------------------------------------'
		union all 	select '			SELECT @xml = ('
		union all 	select '					SELECT *'
		union all 	select '						FROM' 
		union all 	select '							#upu_' + @camel_case_name + '_changed			upu_' + lower(@camel_case_name) + '_changed'
		union all 	select '							LEFT JOIN #upu_' + @camel_case_name + '_deleted	upu_' + lower(@camel_case_name) + '_deleted ON upu_' + lower(@camel_case_name) + '_changed.nmb = upu_' + lower(@camel_case_name) + '_deleted.nmb'
		union all 	select '						FOR XML AUTO'
		union all 	select '				)'
		union all 	select ''
		union all 	select '			EXEC upu_event_queue_add'
		union all 	select '				@user_id	= @user_id,'
		union all 	select '				@event_name	= ''' + upper(@camel_case_name) + '_CHANGED'','
		union all 	select '				@xml		= @xml'
		union all 	select ''
		union all 	select '		END ELSE'
		union all 	select '-------------------------------------------'
		union all 	select '---- синхронные события'
		union all 	select '-------------------------------------------'
		union all 	select '			EXEC upu_' + @camel_case_name + '_Notify'
		union all 	select '				@user_id	= @user_id,'
		union all 	select '				@debug		= @debug'
		union all 	select ''
		union all 	select '	COMMIT TRANSACTION'
		union all 	select ''
		union all 	select '		IF @debug = 1'
		union all 	select '			PRINT ''+++'''
		union all 	select ''
		union all 	select '	RETURN 0'
		union all 	select 'END'
		union all 	select ''
		union all 	select 'GO'
		union all 	select ''
		union all 	select ''
		union all 	select ''
		union all 	select 'IF OBJECT_ID(''dbo.' + @view_name + ''', ''V'') IS NOT NULL'
		union all 	select '	DROP VIEW dbo.' + @view_name
		union all 	select ''
		union all 	select 'GO'
		union all 	select ''
		union all 	select '-- ============================================='
		union all	select '-- Author:  '  +   SUSER_SNAME(SUSER_SID())
		union all	select '-- Create date: ' +  convert(nvarchar(20), getdate(), 20)
		union all 	select '-- Description:	Выдает структуру записи для последующего изменения с помощью ' + @proc_name
		union all 	select '-- ============================================='
		union all 	select 'CREATE VIEW dbo.' + @view_name + ' AS'
		union all 	select '	SELECT'
	insert @lines ( line )
					select '		[' + name + ']' + case when n <> @maxn then ',' else '' end from @t --where name not in ('nmb')
		order by n
	insert @lines ( line )
					select '	FROM'
		union all 	select '		' + @table_name + ' WITH (REPEATABLEREAD)'
		union all 	select 'GO'
		union all 	select ''
		union all 	select ''


	insert @lines ( line )
					select 'IF OBJECT_ID(''' + @proc_log_name +  ''', ''P'') IS NOT NULL'
		union all 	select '	DROP PROCEDURE dbo.' + @proc_log_name
		union all 	select 'GO'
		union all 	select 'SET QUOTED_IDENTIFIER ON'
		union all 	select 'GO'
		union all 	select 'SET ANSI_NULLS ON'
		union all 	select 'GO'
		union all 	select '-- ============================================='
		union all	select '-- Author:  '  +   SUSER_SNAME(SUSER_SID())
		union all	select '-- Create date: ' +  convert(nvarchar(20), getdate(), 20)
		union all	select '-- Description: logs data in ' + @table_name + ' table'
		union all	select '--		'
		union all 	select '-- ============================================='
		union all 	select 'CREATE PROCEDURE dbo.' + @proc_log_name
		union all 	select '	@user_id	uniqueidentifier,'
		union all 	select '	@date		datetime			= NULL,'
		union all 	select '	@host_name	nvarchar(64)			= NULL,'
		union all 	select '	@debug		bit					= 0'
		union all 	select ' AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '		BEGIN'
		union all 	select '			PRINT CAST(@@NESTLEVEL AS nvarchar(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(nvarchar(24), getdate(), 121)'
		union all 	select '			PRINT ''---'''
		union all 	select '		END'
		union all 	select '		ELSE SET NOCOUNT ON'
		union all 	select ''
		union all 	select '	IF @host_name IS NULL'
		union all 	select '		SELECT @host_name = host_name()'
		union all 	select ''
		union all 	select '	IF @date IS NULL'
		union all 	select '		SELECT @date = getdate()'
		union all 	select '    --------------------------------'
		union all 	select '	-- Записываем в лог'
		union all 	select '    --------------------------------'
		union all 	select '	;with tmp as ('
		union all 	select '		SELECT   '
		union all 	select '				[id],'
		union all 	select '				[fl],  '
		union all 	select '				[log_column_name],  '
		union all 	select '				[log_column_value]  '
		union all 	select '			FROM   '
		union all 	select '				(  '
		union all 	select '					SELECT  '
		union all 	select '							[id], '
		union all 	select '							[fl], '
		
	insert @lines ( line )
					select '							isnull( cast( [' + name + '] as nvarchar(4000)), ''{null}'')'
										 + '	[' + name + ']' + case when n <> @maxn  then ',' else '' end from @t where name not in ('id','nmb')
		order by n
		
	insert @lines ( line )
					select '						FROM  '
		union all 	select '							('
		union all 	select '								select 0 fl,* from #upu_' + @camel_case_name + '_changed'
		union all 	select '								union all'
		union all 	select '								select 1 fl,* from #upu_' + @camel_case_name + '_deleted'
		union all 	select '							) u  '
		union all 	select '				) t  '
		union all 	select '				UNPIVOT   '
		union all 	select '					(  '
		union all 	select '						[log_column_value] FOR [log_column_name]  in ( '
		
	insert @lines ( line )
					select '							[' + name + ']' + case when n <> @maxn  then ',' else '' end from @t where name not in ('id','nmb')

		union all 	select '						)'
		union all 	select '					) as tt'		
		union all 	select '	)'

		union all 	select '	INSERT '
		union all 	select '		vs_log('
		union all 	select '			[user_id],'
		union all 	select '			[host_name],'
		union all 	select '			[date],'
		union all 	select '			[table_id],'
		union all 	select '			[row_id],'
		union all 	select '			[column_name],'
		union all 	select '			[column_value]'
		union all 	select '		)'
		union all 	select '		SELECT'
		union all 	select '			@user_id					[user_id],'
		union all 	select '			@host_name					[host_name],'
		union all 	select '			@date						[date],'
		union all 	select '			''' + cast(@table_id as nvarchar(100)) + '''	[table_id],'
		union all 	select '			l.[id],'
		union all 	select '			l.[log_column_name],'
		union all 	select '			l.[log_column_value]'
		union all 	select '		FROM'
		union all 	select '			(  '
		union all 	select '				SELECT [id],[log_column_name],[log_column_value] FROM tmp WHERE fl = 0'
		union all 	select '				EXCEPT '
		union all 	select '				SELECT [id],[log_column_name],[log_column_value] FROM tmp WHERE fl = 1'
		union all 	select '			) l'
		union all 	select ''
		union all 	select '	RETURN 0'
		union all 	select 'END'
		union all 	select ''
		union all 	select 'GO'
		union all 	select ''
		union all 	select ''
		union all 	select ''
		union all 	select '-- Drop stored procedure if it already exists'
		union all 	select 'IF OBJECT_ID(''.upu_' + @camel_case_name + '_Secure'', ''P'') IS NOT NULL'
		union all 	select '	   DROP PROCEDURE dbo.upu_' + @camel_case_name + '_Secure'
		union all 	select 'GO'

		union all 	select '-- ============================================='
		union all	select '-- Author:  '  +   SUSER_SNAME(SUSER_SID())
		union all	select '-- Create date: ' +  convert(nvarchar(20), getdate(), 20)
		union all	select '-- Description: logs data in ' + @table_name + ' table'
		union all	select '--		'
		union all 	select '-- ============================================='
		union all 	select 'CREATE PROCEDURE [dbo].[upu_' + @camel_case_name + '_Secure]'
		union all 	select '	@user_id	uniqueidentifier,'
		union all 	select '	@debug		bit = 0'
		union all 	select 'AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '		BEGIN'
		union all 	select '			PRINT CAST(@@NESTLEVEL AS nvarchar(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(nvarchar(24), getdate(), 121)'
		union all 	select '			PRINT ''---'''
		union all 	select '		END'
		union all 	select ''
		union all 	select '-----------------------------------------------------------------------'
		union all 	select '-- проверка доступа'
		union all 	select '-----------------------------------------------------------------------'
		union all 	select '	if @user_id is null'
		union all 	select '	begin'
		union all 	select '		exec upu_raise_error  @error_code = 300000, @message_marker = ''Нет доступа.'''
		union all 	select '		return -1'
		union all 	select '	end'
		union all 	select ''
		union all 	select '	IF EXISTS'
		union all 	select '		('
		union all 	select '			SELECT	1'
		union all 	select '			FROM	#upu_' + @camel_case_name + '_Changed	i'
		union all 	select '			WHERE	dbo.[uf_Secure_' + @camel_case_name + '_Edit](@user_id, null, i.nmb) = 0'
		union all 	select '					AND'
		union all 	select '					i.nmb IS NOT NULL'
		union all 	select '		)'
		union all 	select '	BEGIN'
		union all 	select '		EXEC upu_raise_error  @error_code = 300000, @message_marker = ''Нет доступа на изменение <>.'''
		union all 	select '		RETURN -1'
		union all 	select '	END'
		union all 	select 'END'
		union all 	select ''
		union all 	select 'GO'
	insert @lines ( line )
					select 'IF OBJECT_ID(''upu_' + @camel_case_name + '_Notify'', ''P'') IS NOT NULL'
		union all 	select '	DROP PROCEDURE dbo.upu_' + @camel_case_name + '_Notify'
		union all 	select 'GO'
		union all 	select 'SET QUOTED_IDENTIFIER ON'
		union all 	select 'GO'
		union all 	select 'SET ANSI_NULLS ON'
		union all 	select 'GO'
		union all 	select '-- ============================================='
		union all	select '-- Author:  '  +   SUSER_SNAME(SUSER_SID())
		union all	select '-- Create date: ' +  convert(nvarchar(20), getdate(), 20)
		union all	select '-- Description: notifies changes in ' + @table_name + ' table'
		union all	select '--		'
		union all 	select '-- ============================================='
		union all 	select 'CREATE PROCEDURE dbo.upu_' + @camel_case_name + '_Notify'
		union all 	select '	@user_id		uniqueidentifier,'
		union all 	select '	@xml			nvarchar(max)		= NULL,'
		union all 	select '	@note			nvarchar(max)		= NULL	out,'
		union all 	select '	@date			datetime			= NULL,'
		union all 	select '	@host_name		nvarchar(64)			= NULL,'
		union all 	select '	@debug			bit					= 0'
		union all 	select 'AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '		BEGIN'
		union all 	select '			PRINT CAST(@@NESTLEVEL AS nvarchar(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(nvarchar(24), getdate(), 121)'
		union all 	select '			PRINT ''---'''
		union all 	select '		END'
		union all 	select ''
		union all 	select '	DECLARE '
		union all 	select '		@docHandle	int,'
		union all 	select '		@rc			int'
		union all 	select ''
		union all 	select '--------------------------------'
		union all 	select '-- Подготавливаем времянки'
		union all 	select '--------------------------------'
		union all 	select '	IF @xml IS NOT NULL BEGIN'
		union all 	select '		SELECT TOP 0 v.* INTO #upu_' + @camel_case_name + '_changed  FROM (SELECT 1 a) t LEFT JOIN v_' + @camel_case_name + ' v ON 1=0'
		union all 	select '		SELECT TOP 0 v.* INTO #upu_' + @camel_case_name + '_deleted  FROM (SELECT 1 a) t LEFT JOIN v_' + @camel_case_name + ' v ON 1=0'
		union all 	select ''
		union all 	select '	-- создаём документ'
		union all 	select '		EXEC sp_xml_preparedocument @docHandle OUTPUT, @xml'
		union all 	select ''
		union all 	select '		INSERT #upu_' + @camel_case_name + '_changed'
		union all 	select '			SELECT * '
		union all 	select '			FROM '
		union all 	select '				OPENXML(@docHandle, N''/ROOT/upu_' + lower(@camel_case_name) + '_changed'') WITH #upu_' + @camel_case_name + '_changed '
		union all 	select ''
		union all 	select '		INSERT #upu_' + @camel_case_name + '_deleted'
		union all 	select '			SELECT * '
		union all 	select '			FROM '
		union all 	select '				OPENXML(@docHandle, N''/ROOT/upu_' + lower(@camel_case_name) + '_changed/upu_' + lower(@camel_case_name) + '_deleted'') WITH #upu_' + @camel_case_name + '_deleted '
		union all 	select '				'
		union all 	select '		EXEC sp_xml_removedocument @docHandle '
		union all 	select '	END'
		union all 	select '----------------------------------'
		union all 	select '-- Запись в лог --'
		union all 	select '----------------------------------'
		union all 	select '	EXEC @rc = upu_' + @camel_case_name + '_Log'
		union all 	select '		@user_id	= @user_id,'
		union all 	select '		@date		= @date,'
		union all 	select '		@host_name	= @host_name,'
		union all 	select '		@debug		= @debug'
		union all 	select ''		
		union all 	select '	IF @@ERROR <> 0 OR @rc <> 0 BEGIN'
		union all 	select ''
		union all 	select '		IF @debug = 1'
		union all 	select '			PRINT ''+++'''
		union all 	select ''
		union all 	select '		RETURN -1'
		union all 	select '	END'
		union all 	select '--------------------------------'
		union all 	select '-- обрабатываваем событие'
		union all 	select '--------------------------------'
		union all 	select '-- 	DECLARE'
		union all 	select '-- 		@event_name			nvarchar(4000),'
		union all 	select '-- 		@object_id			uniqueidentifier,'
		union all 	select '--		@i_<Var_Name, sysname, >	bit,'
		union all 	select '--		@d_<Var_Name, sysname, >	bit'
		union all 	select '--'
		union all 	select '--	DECLARE @c_public_event CURSOR'
		union all 	select '--'	
		union all 	select '--	SET @c_public_event = CURSOR FAST_FORWARD FOR'
		union all 	select '--		SELECT'
		union all 	select '--				i.id,'
		union all 	select '--				i.<Var_Name, sysname, >,'
		union all 	select '--				d.<Var_Name, sysname, >'
		union all 	select '--			FROM'
		union all 	select '--				#upu_' + @camel_case_name + '_changed i'
		union all 	select '--				JOIN #upu_' + @camel_case_name + '_deleted	d	ON i.nmb = d.nmb'	
		union all 	select '--'	
		union all 	select '--	OPEN @c_public_event'
		union all 	select '--'	
		union all 	select '--	FETCH @c_public_event INTO'
		union all 	select '--		@object_id,'
		union all 	select '--		@i_<Var_Name, sysname, >,'
		union all 	select '--		@d_<Var_Name, sysname, >'
		union all 	select '--'
		union all 	select '--	WHILE @@FETCH_STATUS = 0 BEGIN'
		union all 	select '--	'
		union all 	select '--		IF @i_<Var_Name, sysname, > <> @d_<Var_Name, sysname, >'
		union all 	select '--			BEGIN'
		union all 	select '--'
		union all 	select '--				SELECT @event_name	= ''EVENT_' + upper(@camel_case_name) + '_'''
		union all 	select '--'
		union all 	select '--				EXEC upu_PublicEvent_Generate'
		union all 	select '--					@object_id	= @object_id,'
		union all 	select '--					@user_id	= @user_id,'
		union all 	select '--					@event_name	= @event_name,'
		union all 	select '--					@debug		= @debug'
		union all 	select '--			END'
		union all 	select '--'
		union all 	select '--		FETCH @c_public_event INTO'
		union all 	select '--			@object_id,'
		union all 	select '--			@i_<Var_Name, sysname, >,'
		union all 	select '--			@d_<Var_Name, sysname, >'
		union all 	select '--	END'
		union all 	select '--'
		union all 	select '--	CLOSE @c_public_event'
		union all 	select '--	DEALLOCATE @c_public_event'
		union all 	select ''
		union all 	select '		IF @debug = 1'
		union all 	select '			PRINT ''+++'''
		union all 	select ''
		union all 	select 'END'
		union all 	select 'GO'
		union all 	select ''
		union all 	select ''
		union all 	select ''
		union all 	select ''
		union all 	select 'IF OBJECT_ID(''[dbo].[upu_' + @camel_case_name + '_Import]'', ''P'') IS NOT NULL'
		union all 	select '	DROP PROCEDURE [dbo].[upu_' + @camel_case_name + '_Import]'
		union all 	select 'GO'
		union all 	select '/*'
		union all 	select 'upu_' + @camel_case_name + '_import'
		union all 	select '	@user_id = ''FDCA05A3-23B1-4E76-BE64-FC2A3B04D9F0'','
		union all 	select '	@debug = 1'
		union all 	select '*/'
		union all 	select 'CREATE PROCEDURE [dbo].[upu_' + @camel_case_name + '_Import]'
		union all 	select '	@user_id				UNIQUEIDENTIFIER,'
		union all 	select '	@object_nmb				INT					= NULL,'
		union all 	select '	@object_id				UNIQUEIDENTIFIER	= NULL,'
		union all 	select '	@mode					nvarchar(100)		= ''' + upper(@camel_case_name) + '_IMPORT'','
		union all 	select '	@provider_id			UNIQUEIDENTIFIER	= NULL,'
		union all 	select ''
		union all 	select '	@skip_check				int					= NULL,'
		union all 	select '	@skip_security			int					= NULL,'
		union all 	select '	@notify_sync			int					= NULL,'
		union all 	select ''
		union all 	select '	@error_message			nvarchar(max)		= null out,'
		union all 	select ''
		union all 	select '	@add_tables				nvarchar(max)		= null,'
		union all 	select ''
		union all 	select '	@debug					BIT					= 0'
		union all 	select 'AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	DECLARE'
		union all 	select '		@rc			int'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '	BEGIN'
		union all 	select '		PRINT CAST(@@NESTLEVEL AS VARCHAR(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(varchar(24), getdate(), 121) + '' MODE='' + isnull(@mode, ''<NULL>'') + CHAR(10)'
		union all 	select '				+ ISNULL('' object_nmb: '' + CAST(@object_nmb AS VARCHAR(1000)) + CHAR(10), '''')'
		union all 	select '				+ ISNULL('' object_id: '' + CAST(@object_id AS VARCHAR(1000)) + CHAR(10), '''')'
		union all 	select '		PRINT ''---'''
		union all 	select '	END ELSE SET NOCOUNT ON'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- подготовка'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select ' --	IF @provider_id IS NULL SELECT @provider_id = dbo.uf_integration_<>_Provider_Id()'	
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- создание времянки'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '	SELECT TOP 0 v.*'
		union all 	select '		INTO #upu_' + @camel_case_name
		union all 	select '		FROM (SELECT 1 a) t LEFT JOIN dbo.v_' + @camel_case_name + ' v ON 1=0'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- данные объекта'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '	IF @object_id IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select '		WHERE	obj.id = @object_id'
		union all 	select ''
		union all 	select '	ELSE IF @object_nmb IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select '		WHERE	obj.nmb = @object_nmb'
		union all 	select ''
		union all 	select '	ELSE IF object_id(''tempdb..#upu_' + @camel_case_name + '__request_by_id'') IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '		obj'
		union all 	select '		WHERE	id IN (SELECT id FROM #upu_' + @camel_case_name + '__request_by_id)'
		union all 	select ''	
		union all 	select '	ELSE '
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select ''
		union all 	select '	IF @debug = 1 '
		union all 	select '		SELECT  ''#upu_' + @camel_case_name + ' 1'',*'
		union all 	select '		FROM    #upu_' + @camel_case_name
		union all 	select '--------------------------------------------'
		union all 	select '-- дополнительные таблицы'
		union all 	select '--------------------------------------------'
		union all 	select '	--IF @add_tables like ''%,<AddForImport_Table_Name, sysname, >,%'''
		union all 	select '	--BEGIN'
		union all 	select '	--	SELECT TOP 0 v.*'
		union all 	select '	--	INTO #upu_<AddForImport_Table_Name, sysname, >'
		union all 	select '	--	FROM (SELECT 1 a) t LEFT JOIN dbo.v_<AddForImport_Table_Name, sysname, > v ON 1=0'
		union all 	select ''
		union all 	select '	--	INSERT INTO #upu_<AddForImport_Table_Name, sysname, >'
		union all 	select '	--	SELECT	x.*'
		union all 	select '	--	FROM	#upu_' + @camel_case_name + '	obj'
		union all 	select '	--			JOIN v_<AddForImport_Table_Name, sysname, >	x	ON obj.nmb = x.object_nmb'
		union all 	select '	--END'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- вызов интеграции'
		union all 	select '---------------------------------------------------------------------------------			'
		union all 	select '	EXEC @rc = dbo.upu_integration '
		union all 	select '		@user_id		= @user_id,'
		union all 	select '		@mode			= @mode,'
		union all 	select '		@provider_id	= @provider_id,'
		union all 	select '		@debug			= @debug,'
		union all 	select '		@error_message	= @error_message out'
		union all 	select ''
		union all 	select '	IF @@ERROR <> 0 or @rc <> 0'
		union all 	select '		RETURN -1'
		union all 	select ''
		union all 	select '	IF @debug = 1 '
		union all 	select '		SELECT  ''#upu_' + @camel_case_name + ' 2'',*'
		union all 	select '		FROM    #upu_' + @camel_case_name
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- запись'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '	EXEC @rc = dbo.upu_' + @camel_case_name + '_update'
		union all 	select '		@user_id		= @user_id,'
		union all 	select '		@skip_check		= @skip_check,'
		union all 	select '		@skip_security	= @skip_security,'
		union all 	select '		--@skip_recalc	= 1,'
		union all 	select '		@notify_sync	= @notify_sync,'
		union all 	select '		@debug			= @debug,'
		union all 	select '		@error_message	= @error_message out'
		union all 	select ''
		union all 	select '	IF @@ERROR <> 0 or @rc <> 0'
		union all 	select '		RETURN -1'
		union all 	select ''
		union all 	select '	RETURN 0'	
		union all 	select 'END'
		union all 	select 'GO'
		union all 	select ''
		union all 	select ''
		union all 	select ''
		union all 	select 'IF OBJECT_ID(''[dbo].[upu_' + @camel_case_name + '_Export]'', ''P'') IS NOT NULL'
		union all 	select '	DROP PROCEDURE [dbo].[upu_' + @camel_case_name + '_Export]'
		union all 	select 'GO'
		union all 	select '/*'
		union all 	select 'upu_' + @camel_case_name + '_Export'
		union all 	select '	@user_id = ''FDCA05A3-23B1-4E76-BE64-FC2A3B04D9F0'','
		union all 	select '	@debug = 1'
		union all 	select '*/'
		union all 	select 'CREATE PROCEDURE [dbo].[upu_' + @camel_case_name + '_Export]'
		union all 	select '	@user_id				UNIQUEIDENTIFIER,'
		union all 	select '	@object_nmb				INT					= NULL,'
		union all 	select '	@object_id				UNIQUEIDENTIFIER	= NULL,'
		union all 	select '	@mode					nvarchar(100)		= ''' + upper(@camel_case_name) + '_EXPORT'','
		union all 	select '	@provider_id			UNIQUEIDENTIFIER	= NULL,'
		union all 	select ''
		union all 	select '	@skip_check				int					= NULL,'
		union all 	select '	@skip_security			int					= NULL,'
		union all 	select ''
		union all 	select '	@error_message			nvarchar(max)		= null out,'
		union all 	select ''
		union all 	select '	@add_tables				nvarchar(max)		= null,'
		union all 	select ''
		union all 	select '	@debug					BIT					= 0'
		union all 	select 'AS'
		union all 	select 'BEGIN'
		union all 	select ''
		union all 	select '	DECLARE'
		union all 	select '		@rc			int'
		union all 	select ''
		union all 	select '	IF @debug = 1'
		union all 	select '	BEGIN'
		union all 	select '		PRINT CAST(@@NESTLEVEL AS VARCHAR(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(varchar(24), getdate(), 121) + '' MODE='' + isnull(@mode, ''<NULL>'') + CHAR(10)'
		union all 	select '				+ ISNULL('' object_nmb: '' + CAST(@object_nmb AS VARCHAR(1000)) + CHAR(10), '''')'
		union all 	select '				+ ISNULL('' object_id: '' + CAST(@object_id AS VARCHAR(1000)) + CHAR(10), '''') '
		union all 	select '		PRINT ''---'''
		union all 	select '	END ELSE SET NOCOUNT ON'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- подготовка'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select ' --	IF @provider_id IS NULL SELECT @provider_id = dbo.uf_integration_<>_Provider_Id()'	
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- создание времянки'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '	SELECT TOP 0 v.*'
		union all 	select '		INTO #upu_' + @camel_case_name
		union all 	select '		FROM (SELECT 1 a) t LEFT JOIN dbo.v_' + @camel_case_name + ' v ON 1=0'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- данные объекта'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '	IF @object_id IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select '		WHERE	obj.id = @object_id'
		union all 	select ''
		union all 	select '	ELSE IF @object_nmb IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select '		WHERE	obj.nmb = @object_nmb'
		union all 	select ''
		union all 	select '	ELSE IF object_id(''tempdb..#upu_' + @camel_case_name + '__request_by_id'') IS NOT NULL'
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '		obj'
		union all 	select '		WHERE	id IN (SELECT id FROM #upu_' + @camel_case_name + '__request_by_id)'
		union all 	select ''	
		union all 	select '	ELSE '
		union all 	select '		INSERT INTO #upu_' + @camel_case_name
		union all 	select '		SELECT	obj.*'
		union all 	select '		FROM	v_' + @camel_case_name + '	obj'
		union all 	select ''
		union all 	select '	IF @debug = 1 '
		union all 	select '		SELECT  ''#upu_' + @camel_case_name + ' 1'',*'
		union all 	select '		FROM    #upu_' + @camel_case_name
		union all 	select '--------------------------------------------'
		union all 	select '-- дополнительные таблицы'
		union all 	select '--------------------------------------------'
		union all 	select '	--IF @add_tables like ''%,<AddForImport_Table_Name, sysname, >,%'''
		union all 	select '	--BEGIN'
		union all 	select '	--	SELECT TOP 0 v.*'
		union all 	select '	--	INTO #upu_<AddForImport_Table_Name, sysname, >'
		union all 	select '	--	FROM (SELECT 1 a) t LEFT JOIN dbo.v_<AddForImport_Table_Name, sysname, > v ON 1=0'
		union all 	select ''
		union all 	select '	--	INSERT INTO #upu_<AddForImport_Table_Name, sysname, >'
		union all 	select '	--	SELECT	x.*'
		union all 	select '	--	FROM	#upu_' + @camel_case_name + '	obj'
		union all 	select '	--			JOIN v_<AddForImport_Table_Name, sysname, >	x	ON obj.nmb = x.object_nmb'
		union all 	select '	--END'
		union all 	select '---------------------------------------------------------------------------------'
		union all 	select '-- вызов интеграции'
		union all 	select '---------------------------------------------------------------------------------			'
		union all 	select '	EXEC @rc = dbo.upu_integration '
		union all 	select '		@mode			= @mode,'
		union all 	select '		@provider_id	= @provider_id,'
		union all 	select '		@debug			= @debug,'
		union all 	select '		@error_message	= @error_message out,'
		union all 	select '		@user_id		= @user_id'
		union all 	select ''
		union all 	select '	IF @@ERROR <> 0 or @rc <> 0'
		union all 	select '		RETURN -1'	
		union all 	select 'END'
		union all 	select 'GO'
		union all select '-- Drop stored procedure if it already exists'
		union all select 'IF OBJECT_ID(''dbo.' + @proc_set_name + ''', ''P'') IS NOT NULL'
		union all select '	   DROP PROCEDURE dbo.' + @proc_set_name
		union all select 'GO'
		union all select ''
		union all select 'CREATE PROCEDURE [dbo].[' + @proc_set_name + ']'
		union all select '	@user_id			uniqueidentifier'
		union all select ',	@skip_check			bit					= 0'
		union all select ',	@skip_recalc		bit					= 0'
		union all select ',	@skip_security		bit					= 0'
		union all select ',	@error_message	nvarchar(max)		= NULL out'
		union all select ',	@notify_sync		bit					= 1'
		union all select ',	@debug				bit = 0' 
		union all select 'AS'
		union all select 'BEGIN'
		union all select '	IF @debug = 1'
		union all select '	BEGIN'	
		union all select '		PRINT CAST(@@NESTLEVEL AS nvarchar(100)) + ''. '' + OBJECT_NAME(@@PROCID) + '' '' + convert(nvarchar(24), getdate(), 121) + CHAR(10)'
		union all select '				+ '' user_id: '' + ISNULL(CAST(@user_id AS nvarchar(1000)), ''NULL'') + CHAR(10)'
		union all select '		PRINT ''---'''
		union all select '	END' 
		union all select '	--'
		union all select '	-- check the input temp table'
		union all select '	IF OBJECT_ID(''tempdb..#' + @proc_set_name + ''') IS NULL' 
		union all select '	BEGIN' 
		union all select '		EXEC upu_raise_error  @error_code = 300000, @message_marker = ''Временная таблица #' + @proc_set_name + ' отсутствует'''
		union all select '		RETURN 0'
		union all select '	END' 
		union all select '	--'
		union all select '	-- create temp table #' + @proc_set_name
		union all select '	SELECT TOP 0 v.* INTO #upu_' + @camel_case_name + '  FROM (SELECT 1 a) t LEFT JOIN ' + @view_name + ' v ON 1=0'
		union all select '	INSERT INTO #upu_' + @camel_case_name 
		union all select '	SELECT v.*' 
		union all select '	FROM	' + @view_name + ' v'
		union all select '			<Filter_Join_By_Campaign_nmb, sysname, >'
		union all select '	--'
		union all select '	-- update data in the temp table' 
		union all select '	--		1. row from input table exists in db -> set archive = 0'
		union all select '	--		2. row from input table not exists in db -> insert new row' 
		union all select '	--		3. row from db does not exist in temp table -> set archive = 1'
		union all select '	;MERGE #upu_' + @camel_case_name + ' AS target'
		union all select '	USING #' + @proc_set_name + ' AS source ON ' + @fields_for_join 
		union all select '	WHEN MATCHED AND (target.archive = 1)  THEN' 
		union all select '		UPDATE SET target.archive = 0'
		union all select '	WHEN NOT MATCHED BY target THEN' 
		union all select '		INSERT('	
		union all select '			' + REPLACE(@fields_for_insert, '<prefix>', '')
		union all select '		,	archive'
		union all select '		)' 
		union all select '		VALUES ('
		union all select '			' + REPLACE(@fields_for_insert, '<prefix>', 'source.')
		union all select '		,	0'
		union all select '		)'
		union all select '	WHEN NOT MATCHED BY source AND target.archive = 0 THEN' 
		union all select '		UPDATE SET target.archive = 1'
		union all select '	;'	
		union all select '	-- fire up the engine'
		union all select '	exec dbo.upu_' + @camel_case_name + '_Update'
		union all select '		@user_id			= @user_id'
		union all select '	,	@skip_check			= @skip_check'	
		union all select '	,	@skip_recalc		= @skip_recalc'
		union all select '	,	@skip_security		= @skip_security'
		union all select '	,	@error_message	= @error_message out'
		union all select '	,	@notify_sync		= @notify_sync'
		union all select '	'
		union all select '	RETURN 1'
		union all select '	--'	
		union all select 'END'

	declare c1 cursor local forward_only for
		select line from @lines

	open c1
	declare
		@line varchar(8000)
	fetch next from c1
		into @line
	while @@fetch_status = 0
	begin
		print @line
		fetch next from c1
			into @line
	end
	close c1
	deallocate c1

GO
